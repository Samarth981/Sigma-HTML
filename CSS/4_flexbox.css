.box{
    width: 800px;
    height: 300px;
    background-color: rgba(96, 100, 214, 0.671);
    display: flex;
}
.box1{
    background-color:red;
}
.box2{
    background-color:green;
}
.box3{
    background-color:yellow;
}
.box4{
    background-color:salmon;
}
.box5{
    background-color:blue;
}
.box6{
    background-color:purple;
}
.box7{
    background-color:rgb(0, 195, 255);
}
.box div{
    height: 100px;
    width: 80px;
    text-align: center;
    font-size: 18px;
}

/*change flext*/
.box{
    /* position is set in row and fit-> by default row-> left to right in bot--> width change */
    display: flex; 
    flex-direction:row-reverse; /*right to left. same in colem*/ 
}
/* set a box possition for image */
.fleximg{
    position: absolute;
    top: 10px;
    left: 810px;
}
#img-direction{
    width: 400px; /*set image size*/
}
.container{
    width: 800px;
    height: 300px;
    background-color: rgba(214, 96, 184, 0.671);
    margin-top: 10px;
    display: flex;
}
.container div{
    height: 100px;
    width: 180px;
    text-align: center;
    font-size: 18px;
}
/* if I tary to width is do not change and fite in box then use flex-wrap */
/* flex-direction is to posibale overlapp if iner boxes size is more comper to outer box*/
.container{
    flex-direction: row-reverse;
    flex-wrap: nowrap; /* meaning of nowrap is like not change */
    flex-wrap:wrap-reverse; /*rever for the cross axis*/
}
.fleximg2{
    width:400px;
    height: 200px;
    position: absolute;
    top: 313px;
    left: 810px;
}
#img-wrap{
    width:400px;
    height: 200px;
}
/* if I tary to width is change  particular box and fite in box then use flex-basis */
/* if main axis space is not cover and i tray to cover box1 then use flex-grow-> this is use not px, rem, em etc its work for 1 times, 2 times etc*/
.box1{
    flex-basis: 100px; /* if flex-direction is collum then aply for hight*/ /*that means change for main axis*/
    flex-grow: 1;
    /* min-width: 200px; it's set min width do not set less */
    flex-shrink:1; /* revers for grow-> dicress size*/ /* If box2 is grow 4 times then dicress a box2 2 time*/
}
.box2{
    flex-grow: 2; /* width-> 2*box1=box2 */
}